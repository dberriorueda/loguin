{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput, Avatar, Button } from \"react-native-paper\";\nimport { styles } from \"../assets/estilos/alistyle\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { firebaseConfig } from \"../firebaseconfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Loguin(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nombreusuario = _useState2[0],\n    setNombreUsuario = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPass = _useState8[0],\n    setShowpass = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    messageColor = _useState10[0],\n    setMessageColor = _useState10[1];\n  var app = initializeApp(firebaseConfig);\n  var auth = getAuth(app);\n  var generalNombre = function generalNombre() {\n    var nombreUnico = \"user\" + Math.floor(Math.random() * 10000);\n    return nombreUnico;\n  };\n  var handleCreateAccount = function handleCreateAccount() {\n    var nombreUnico = generalNombre();\n    createUserWithEmailAndPassword(auth, nombreusuario + \"@myapp.com\", password).then(function () {\n      var _ref2 = _asyncToGenerator(function* (userCredential) {\n        yield updateProfile(userCredential.user, {\n          displayName: nombreUnico\n        });\n        setMessageColor(true);\n        setMessage(\"Usuario registrado ...\");\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()).catch(function (error) {\n      setMessage(\"Error al crear usuario ... Intentelo de nuevo\");\n      setMessageColor(false);\n    });\n  };\n  var handleSignIn = function handleSignIn() {\n    signInWithEmailAndPassword(auth, nombreusuario + \"@myapp.com\", password).then(function (userCredential) {\n      console.log(\"Usuario registrado...\");\n      navigation.navigate('Opciones', {\n        nombreusuario: nombreusuario\n      });\n    }).catch(function (error) {\n      setMessage(\"contrase침a incorrecta.\");\n      setMessageColor(false);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Avatar.Image, {\n      style: {\n        marginBottom: 20\n      },\n      size: 160,\n      source: require(\"../assets/imgs/alquiler1.jpg\")\n    }), _jsxs(View, {\n      style: {\n        borderWidth: 10,\n        borderColor: 'gray',\n        borderRadius: 20,\n        padding: 45\n      },\n      children: [_jsx(TextInput, {\n        autoFocus: true,\n        label: \"Nombre de Usuario\",\n        left: _jsx(TextInput.Icon, {\n          icon: \"account\"\n        }),\n        onChangeText: function onChangeText(nombreusuario) {\n          return setNombreUsuario(nombreusuario);\n        },\n        value: nombreusuario\n      }), _jsx(TextInput, {\n        style: {\n          marginTop: 10\n        },\n        label: \"Contrase\\xF1a\",\n        secureTextEntry: !showPass,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        },\n        value: password,\n        right: _jsx(TextInput.Icon, {\n          icon: showPass ? \"eye\" : \"eye-off\",\n          onPress: function onPress() {\n            return setShowpass(!showPass);\n          }\n        })\n      }), _jsx(Button, {\n        style: {\n          marginTop: 10,\n          backgroundColor: 'orange'\n        },\n        icon: \"login\",\n        mode: \"outlined\",\n        onPress: handleSignIn,\n        children: \"Iniciar Sesi\\xF3n\"\n      }), _jsx(Button, {\n        style: {\n          marginTop: 60,\n          backgroundColor: 'yellow'\n        },\n        icon: \"account\",\n        mode: \"outlined\",\n        onPress: handleCreateAccount,\n        children: \"Crear Usuario\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: 5,\n          color: messageColor ? 'green' : 'red'\n        },\n        children: message\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["useState","useEffect","View","Text","TextInput","Avatar","Button","styles","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateProfile","initializeApp","firebaseConfig","jsx","_jsx","jsxs","_jsxs","Loguin","_ref","navigation","_useState","_useState2","_slicedToArray","nombreusuario","setNombreUsuario","_useState3","_useState4","password","setPassword","_useState5","_useState6","message","setMessage","_useState7","_useState8","showPass","setShowpass","_useState9","_useState10","messageColor","setMessageColor","app","auth","generalNombre","nombreUnico","Math","floor","random","handleCreateAccount","then","_ref2","_asyncToGenerator","userCredential","user","displayName","_x","apply","arguments","catch","error","handleSignIn","console","log","navigate","style","container","children","Image","marginBottom","size","source","require","borderWidth","borderColor","borderRadius","padding","autoFocus","label","left","Icon","icon","onChangeText","value","marginTop","secureTextEntry","right","onPress","backgroundColor","mode","color"],"sources":["C:/Users/ThinkPad/Desktop/loguin_ReactNative/componentes/Loguin.js"],"sourcesContent":["import { useState, useEffect} from \"react\";\r\nimport { View,Text } from \"react-native\";\r\nimport { TextInput, Avatar, Button } from \"react-native-paper\";\r\nimport { styles } from \"../assets/estilos/alistyle\";\r\n//firebase\r\nimport {getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile} from 'firebase/auth'\r\nimport {initializeApp} from 'firebase/app';\r\nimport {firebaseConfig} from '../firebaseconfig';\r\n\r\nexport default function Loguin({navigation}){\r\n    const [nombreusuario, setNombreUsuario] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [showPass,setShowpass] = useState(false)\r\n    const [messageColor, setMessageColor] = useState(true)\r\n\r\n    //Definir constantes para la autenticacion\r\n    const app = initializeApp(firebaseConfig);\r\n    const auth = getAuth(app)\r\n\r\n    const generalNombre = () =>{\r\n        const nombreUnico = \"user\" + Math.floor(Math.random() * 10000);\r\n        return nombreUnico;\r\n\r\n    };\r\n    //Metodos para crear cuenta en firebase authentication y signIn\r\n    const handleCreateAccount = ()=>{\r\n        const nombreUnico = generalNombre();\r\n        createUserWithEmailAndPassword(auth,nombreusuario + \"@myapp.com\",password)\r\n        .then(async (userCredential)=>{\r\n            //console.log(userCredential.user.providerData)\r\n            await updateProfile(userCredential.user,{\r\n                displayName: nombreUnico,\r\n            });\r\n            setMessageColor(true)\r\n            setMessage(\"Usuario registrado ...\")\r\n        })\r\n        .catch((error)=>{\r\n            //console.log(error.message)\r\n            setMessage(\"Error al crear usuario ... Intentelo de nuevo\")\r\n            setMessageColor(false)\r\n        });\r\n    }\r\n    const handleSignIn = ()=>{\r\n        signInWithEmailAndPassword(auth, nombreusuario + \"@myapp.com\", password)\r\n        .then((userCredential)=>{\r\n            console.log(\"Usuario registrado...\");\r\n            navigation.navigate('Opciones', {nombreusuario:nombreusuario})\r\n        })\r\n        .catch((error)=>{\r\n            //console.log(error.message)\r\n            setMessage(\"contrase침a incorrecta.\");\r\n            setMessageColor(false)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n        <Avatar.Image\r\n            style={{ marginBottom: 20  }}\r\n            size={160}\r\n            source={require('../assets/imgs/alquiler1.jpg')} />\r\n        <View style={{ borderWidth: 10, borderColor: 'gray', borderRadius: 20, padding: 45 }}>\r\n            <TextInput\r\n                autoFocus\r\n                label=\"Nombre de Usuario\"\r\n                left={<TextInput.Icon icon=\"account\" />}\r\n                onChangeText={(nombreusuario) => setNombreUsuario(nombreusuario)}\r\n                value={nombreusuario}\r\n            />\r\n            <TextInput\r\n                style={{ marginTop: 10 }}\r\n                label=\"Contrase침a\"\r\n                secureTextEntry ={!showPass}\r\n                onChangeText={(password) => setPassword(password)}\r\n                value={password}\r\n                right={<TextInput.Icon icon={showPass ? \"eye\" : \"eye-off\"} onPress={()=> setShowpass(!showPass)} />}\r\n            />\r\n            <Button\r\n                style={{ marginTop: 10, backgroundColor: 'orange' }}\r\n                icon=\"login\"\r\n                mode=\"outlined\"\r\n                onPress={handleSignIn}\r\n            >\r\n                Iniciar Sesi칩n\r\n            </Button>\r\n            <Button\r\n                style={{ marginTop: 60, backgroundColor: 'yellow' }}\r\n                icon=\"account\"\r\n                mode=\"outlined\"\r\n                onPress={handleCreateAccount}\r\n            >\r\n                Crear Usuario\r\n            </Button>\r\n            <Text style={{ marginTop: 5, color: messageColor?'green': 'red'}}>{message}</Text>\r\n        </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}