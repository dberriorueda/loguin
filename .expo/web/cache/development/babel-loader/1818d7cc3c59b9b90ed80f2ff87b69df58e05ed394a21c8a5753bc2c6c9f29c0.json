{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var ServicioLocal = {\n  obtenerCarrosDisponibles: function () {\n    var _obtenerCarrosDisponibles = _asyncToGenerator(function* () {\n      try {\n        var registros = yield AsyncStorage.getItem('RegistrosGuardados');\n        return JSON.parse(registros) || [];\n      } catch (error) {\n        console.log(\"Error al obtener carros disponibles: \", error.message);\n        return [];\n      }\n    });\n    function obtenerCarrosDisponibles() {\n      return _obtenerCarrosDisponibles.apply(this, arguments);\n    }\n    return obtenerCarrosDisponibles;\n  }(),\n  actualizarEstadoCarro: function () {\n    var _actualizarEstadoCarro = _asyncToGenerator(function* (numeroPlaca, nuevoEstado) {\n      try {\n        var carrosGuardados = yield AsyncStorage.getItem('RegistrosGuardados');\n        var carros = JSON.parse(carrosGuardados) || [];\n        var nuevosCarros = carros.map(function (carro) {\n          if (carro.placa === numeroPlaca) {\n            return _objectSpread(_objectSpread({}, carro), {}, {\n              state: nuevoEstado\n            });\n          }\n          return carro;\n        });\n        yield AsyncStorage.setItem('RegistrosGuardados', JSON.stringify(nuevosCarros));\n      } catch (error) {\n        console.log(`error al actualizar el estado del carro ${numeroPlaca} localmente:`, error.message);\n        throw error;\n      }\n    });\n    function actualizarEstadoCarro(_x, _x2) {\n      return _actualizarEstadoCarro.apply(this, arguments);\n    }\n    return actualizarEstadoCarro;\n  }()\n};","map":{"version":3,"names":["AsyncStorage","ServicioLocal","obtenerCarrosDisponibles","_obtenerCarrosDisponibles","_asyncToGenerator","registros","getItem","JSON","parse","error","console","log","message","apply","arguments","actualizarEstadoCarro","_actualizarEstadoCarro","numeroPlaca","nuevoEstado","carrosGuardados","carros","nuevosCarros","map","carro","placa","_objectSpread","state","setItem","stringify","_x","_x2"],"sources":["C:/Users/ThinkPad/Desktop/loguin_ReactNative/componentes/ServicioLocal.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const ServicioLocal = {\r\n    obtenerCarrosDisponibles: async () => {\r\n        try {\r\n            const registros = await AsyncStorage.getItem('RegistrosGuardados')\r\n            return JSON.parse(registros) || []\r\n        } catch (error) {\r\n            console.log(\"Error al obtener carros disponibles: \", error.message)\r\n            return []\r\n        }\r\n    },\r\n\r\n    actualizarEstadoCarro: async (numeroPlaca, nuevoEstado) => {\r\n        try{\r\n            const carrosGuardados = await AsyncStorage.getItem('RegistrosGuardados')\r\n            const carros = JSON.parse(carrosGuardados) || []\r\n            const nuevosCarros = carros.map(carro => {\r\n                if (carro.placa === numeroPlaca) {\r\n                    return { ...carro, state: nuevoEstado}\r\n                }\r\n                return carro \r\n            })\r\n            await AsyncStorage.setItem('RegistrosGuardados', JSON.stringify(nuevosCarros))\r\n        }catch (error) {\r\n            console.log(`error al actualizar el estado del carro ${numeroPlaca} localmente:`, error.message)\r\n            throw error\r\n        }\r\n    },\r\n};\r\n"],"mappings":";;;;AAAA,OAAOA,YAAY,MAAM,2CAA2C;AAEpE,OAAO,IAAMC,aAAa,GAAG;EACzBC,wBAAwB;IAAA,IAAAC,yBAAA,GAAAC,iBAAA,CAAE,aAAY;MAClC,IAAI;QACA,IAAMC,SAAS,SAASL,YAAY,CAACM,OAAO,CAAC,oBAAoB,CAAC;QAClE,OAAOC,IAAI,CAACC,KAAK,CAACH,SAAS,CAAC,IAAI,EAAE;MACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEF,KAAK,CAACG,OAAO,CAAC;QACnE,OAAO,EAAE;MACb;IACJ,CAAC;IAAA,SAAAV,yBAAA;MAAA,OAAAC,yBAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAZ,wBAAA;EAAA;EAEDa,qBAAqB;IAAA,IAAAC,sBAAA,GAAAZ,iBAAA,CAAE,WAAOa,WAAW,EAAEC,WAAW,EAAK;MACvD,IAAG;QACC,IAAMC,eAAe,SAASnB,YAAY,CAACM,OAAO,CAAC,oBAAoB,CAAC;QACxE,IAAMc,MAAM,GAAGb,IAAI,CAACC,KAAK,CAACW,eAAe,CAAC,IAAI,EAAE;QAChD,IAAME,YAAY,GAAGD,MAAM,CAACE,GAAG,CAAC,UAAAC,KAAK,EAAI;UACrC,IAAIA,KAAK,CAACC,KAAK,KAAKP,WAAW,EAAE;YAC7B,OAAAQ,aAAA,CAAAA,aAAA,KAAYF,KAAK;cAAEG,KAAK,EAAER;YAAW;UACzC;UACA,OAAOK,KAAK;QAChB,CAAC,CAAC;QACF,MAAMvB,YAAY,CAAC2B,OAAO,CAAC,oBAAoB,EAAEpB,IAAI,CAACqB,SAAS,CAACP,YAAY,CAAC,CAAC;MAClF,CAAC,QAAOZ,KAAK,EAAE;QACXC,OAAO,CAACC,GAAG,CAAE,2CAA0CM,WAAY,cAAa,EAAER,KAAK,CAACG,OAAO,CAAC;QAChG,MAAMH,KAAK;MACf;IACJ,CAAC;IAAA,SAAAM,sBAAAc,EAAA,EAAAC,GAAA;MAAA,OAAAd,sBAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,qBAAA;EAAA;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}