{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextInput, Button } from \"react-native-paper\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ServicioLocal } from \"../componentes/ServicioLocal\";\nimport { styles } from \"../assets/estilos/alistyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function RegistroCarros() {\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    formState = _useForm.formState,\n    reset = _useForm.reset;\n  var errors = formState.errors;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    registrosGuardados = _useState2[0],\n    setRegistrosGuardados = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    modoEdicion = _useState6[0],\n    setModoEdicion = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    registroAEditar = _useState8[0],\n    setRegistroAEditar = _useState8[1];\n  var navigation = useNavigation();\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    messageColor = _useState10[0],\n    setMessageColor = _useState10[1];\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isloading = _useState12[0],\n    setIsloading = _useState12[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var _yield$Promise$all = yield Promise.all([AsyncStorage.getItem('registrosGuardados'), ServicioLocal.obtenerCarrosDisponibles()]),\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2),\n            registros = _yield$Promise$all2[0],\n            carros = _yield$Promise$all2[1];\n          setRegistrosGuardados(JSON.parse(registros) || []);\n        } catch (error) {\n          console.error(\"Error al obtener registros guardados\", error.message);\n        } finally {\n          setIsloading(false);\n        }\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  var onSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      var isValid = !errors.placa && !errors.brand && !errors.state;\n      if (isValid) {\n        var nuevoCarro = {\n          placa: data.placa,\n          brand: data.brand,\n          state: 'Disponible'\n        };\n        if (modoEdicion && registroAEditar) {\n          var nuevoRegistro = registrosGuardados.map(function (registro) {\n            return registro === registroAEditar ? nuevoCarro : registro;\n          });\n          setRegistrosGuardados(nuevoRegistro);\n          setModoEdicion(false);\n          setRegistroAEditar(null);\n          setMessageColor(true);\n          setMessage('Modificación exitosa');\n        } else {\n          setRegistrosGuardados([].concat(_toConsumableArray(registrosGuardados), [nuevoCarro]));\n          setMessageColor(true);\n          setMessage('Registro exitoso');\n        }\n        yield AsyncStorage.setItem('registrosGuardados', JSON.stringify([].concat(_toConsumableArray(registrosGuardados), [nuevoCarro])));\n        reset();\n      } else {\n        setMessageColor(false);\n        setMessage('Verifique los datos del formulario.');\n      }\n    });\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleModificar = function handleModificar(registro) {\n    if (registro) {\n      setRegistroAEditar(registro);\n      reset({\n        placa: registro.placa || '',\n        brand: registro.brand || '',\n        state: registro.state || ''\n      });\n      setModoEdicion(true);\n    } else {\n      setRegistroAEditar(null);\n      reset();\n      setModoEdicion(false);\n    }\n  };\n  var eliminarRegistros = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.clear();\n        setRegistrosGuardados([]);\n        console.log('Registros eliminados');\n      } catch (error) {\n        console.error('Error al eliminar el registro: ', error.message);\n      }\n    });\n    return function eliminarRegistros() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: \"Registro de Carros\"\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","useForm","Controller","TextInput","Button","AsyncStorage","useNavigation","ServicioLocal","styles","jsx","_jsx","RegistroCarros","_useForm","control","handleSubmit","formState","reset","errors","_useState","_useState2","_slicedToArray","registrosGuardados","setRegistrosGuardados","_useState3","_useState4","message","setMessage","_useState5","_useState6","modoEdicion","setModoEdicion","_useState7","_useState8","registroAEditar","setRegistroAEditar","navigation","_useState9","_useState10","messageColor","setMessageColor","_useState11","_useState12","isloading","setIsloading","fetchData","_ref","_asyncToGenerator","_yield$Promise$all","Promise","all","getItem","obtenerCarrosDisponibles","_yield$Promise$all2","registros","carros","JSON","parse","error","console","apply","arguments","onSubmit","_ref2","data","isValid","placa","brand","state","nuevoCarro","nuevoRegistro","map","registro","concat","_toConsumableArray","setItem","stringify","_x","handleModificar","eliminarRegistros","_ref3","clear","log","contentContainerStyle","container","children","style","title"],"sources":["C:/Users/507/Desktop/loguin/componentes/RegistrarCarro.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { TextInput, Button } from \"react-native-paper\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { ServicioLocal } from \"../componentes/ServicioLocal\";\r\nimport { styles } from \"../assets/estilos/alistyle\";\r\n\r\nexport default function RegistroCarros() {\r\n    const { control, handleSubmit, formState, reset } = useForm()\r\n    const { errors } = formState;\r\n    const [registrosGuardados, setRegistrosGuardados] = useState([])\r\n    const [message, setMessage] = useState('')\r\n    const [modoEdicion, setModoEdicion] = useState(false)\r\n    const [registroAEditar, setRegistroAEditar] = useState(null)\r\n    const navigation = useNavigation()\r\n    const [messageColor, setMessageColor] = useState(true)\r\n    const [isloading, setIsloading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [registros, carros] = await Promise.all([\r\n                    AsyncStorage.getItem('registrosGuardados'),\r\n                    ServicioLocal.obtenerCarrosDisponibles()\r\n                ])\r\n                setRegistrosGuardados(JSON.parse(registros) || [])\r\n                // setCarrosDisponibles(carros) // Esto parece un error, debería ser setRegistrosGuardados\r\n            } catch (error) {\r\n                console.error(\"Error al obtener registros guardados\", error.message)\r\n            } finally {\r\n                setIsloading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const onSubmit = async (data) => {\r\n        const isValid = !errors.placa && !errors.brand && !errors.state;\r\n        if (isValid) {\r\n            const nuevoCarro = {\r\n                placa: data.placa,\r\n                brand: data.brand,\r\n                state: 'Disponible',\r\n            };\r\n            if (modoEdicion && registroAEditar) {\r\n                // Modo de edición, actualizar el registro existente\r\n                const nuevoRegistro = registrosGuardados.map((registro) =>\r\n                    registro === registroAEditar ? nuevoCarro : registro\r\n                );\r\n                setRegistrosGuardados(nuevoRegistro);\r\n                setModoEdicion(false);\r\n                setRegistroAEditar(null);\r\n                setMessageColor(true);\r\n                setMessage('Modificación exitosa');\r\n            } else {\r\n                // Nuevo registro\r\n                setRegistrosGuardados([...registrosGuardados, nuevoCarro]); // Aquí debería ser setRegistrosGuardados\r\n                setMessageColor(true);\r\n                setMessage('Registro exitoso');\r\n            }\r\n\r\n            // Guardar en AsyncStorage\r\n            await AsyncStorage.setItem('registrosGuardados', JSON.stringify([...registrosGuardados, nuevoCarro]));\r\n            reset();\r\n            // navigation.navigate('AlquilarCarro', { registrosGuardados })\r\n        } else {\r\n            setMessageColor(false);\r\n            setMessage('Verifique los datos del formulario.');\r\n        }\r\n    };\r\n\r\n    const handleModificar = (registro) => {\r\n        if (registro) {\r\n            setRegistroAEditar(registro);\r\n            reset({\r\n                placa: registro.placa || '',\r\n                brand: registro.brand || '',\r\n                state: registro.state || '',\r\n            });\r\n            setModoEdicion(true);\r\n        } else {\r\n            setRegistroAEditar(null);\r\n            reset();\r\n            setModoEdicion(false);\r\n        }\r\n    };\r\n\r\n    const eliminarRegistros = async () => {\r\n        try {\r\n            await AsyncStorage.clear()\r\n            setRegistrosGuardados([])\r\n            console.log('Registros eliminados')\r\n        } catch (error) {\r\n            console.error('Error al eliminar el registro: ', error.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ScrollView contentContainerStyle={styles.container}>\r\n            <Text style={styles.title}>Registro de Carros</Text>\r\n            {/* Resto del código... */}\r\n        </ScrollView>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}