{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useState } from \"react\";\nimport { styles } from \"../assets/estilos/alistyle\";\nimport DateTimePicker from \"react-native-modal-datetime-picker\";\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { firebaseConfig } from \"../firebaseconfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseApp = initializeApp(firebaseConfig);\nvar db = getFirestore(firebaseApp);\nexport default function AlquilarCarro(_ref) {\n  var route = _ref.route;\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    formState = _useForm.formState;\n  var errors = formState.errors;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messageColor = _useState4[0],\n    setMessageColor = _useState4[1];\n  var _useState5 = useState(new Date()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dia = _useState6[0],\n    setDia = _useState6[1];\n  var _use = use,\n    _use2 = _slicedToArray(_use, 2),\n    show = _use2[0],\n    setShow = _use2[1];\n  var onSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      var isValid = !errors.numeroAlquiler && !errors.nombreUsuario && !errors.numeroPlaca && !errors.fechaAlquiler;\n      if (isValid) {\n        var alquilerCollection = collection(db, 'alquileres');\n        var nuevoAlquiler = {\n          numeroAlquiler: data.nuevoAlquiler,\n          nombreUsuario: data.nombreUsuario,\n          numeroPlaca: data.numeroPlaca,\n          fechaAlquiler: selectedDate\n        };\n        try {\n          var docRef = yield addDoc(alquilerCollection, nuevoAlquiler);\n          setMessageColor(true);\n          setMessage('Alquiler exitoso');\n        } catch (error) {\n          setMessageColor(false);\n          setMessage('Error al realizar el alquiler');\n        }\n      } else {\n        setMessageColor(false);\n        setMessage('Verifique los datos del formulario');\n      }\n    });\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var mostrarFecha = function mostrarFecha() {\n    setHoravisible(true);\n  };\n  var ocultarFecha = function ocultarFecha() {\n    setHoravisible(false);\n  };\n  var confirmarFecha = function confirmarFecha(Date) {\n    setSelectedDate(Date);\n    ocultarFecha();\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Alquiler de Carro\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n        return _jsx(TextInput, {\n          label: \"Numero de alquiler\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"numeroAlquiler\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref4) {\n        var _ref4$field = _ref4.field,\n          onChange = _ref4$field.onChange,\n          onBlur = _ref4$field.onBlur,\n          value = _ref4$field.value;\n        return _jsx(TextInput, {\n          label: \"Nombre de usuario\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"nombreUsuario\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref5) {\n        var _ref5$field = _ref5.field,\n          onChange = _ref5$field.onChange,\n          onBlur = _ref5$field.onBlur,\n          value = _ref5$field.value;\n        return _jsx(TextInput, {\n          label: \"Numero de placa\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"numeroPlaca\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Button, {\n      title: \"Seleccionar Fecha\",\n      onPress: mostrarFecha\n    }), _jsx(Text, {\n      children: _jsx(TextInput, {\n        label: \"Fecha de alquiler\",\n        value: selectedDate ? selectedDate.toDateString() : \"Seleccionar fecha\",\n        onTouchStart: mostrarFecha\n      })\n    }), _jsx(DatePicker, {\n      style: {\n        width: 200\n      },\n      date: selectedDate,\n      mode: \"date\",\n      placeholder: \"Seleccionar fecha\",\n      format: \"YYYY-MM-DD\",\n      minDate: \"2023-01-01\",\n      maxDate: \"2025-12-31\",\n      confirmBtnText: \"Confirmar\",\n      cancelBtnText: \"Cancelar\",\n      onDateChange: function onDateChange(date) {\n        return setSelectedDate(date);\n      }\n    }), _jsx(Button, {\n      title: \"Alquilar\",\n      onPress: handleSubmit(onSubmit)\n    }), message && _jsx(Text, {\n      style: {\n        color: messageColor ? 'green' : 'red'\n      },\n      children: message\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","ScrollView","StyleSheet","FlatList","useForm","Controller","TextInput","Button","useState","styles","DateTimePicker","getFirestore","collection","addDoc","initializeApp","firebaseConfig","jsx","_jsx","jsxs","_jsxs","firebaseApp","db","AlquilarCarro","_ref","route","_useForm","control","handleSubmit","formState","errors","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","messageColor","setMessageColor","_useState5","Date","_useState6","dia","setDia","_use","use","_use2","show","setShow","onSubmit","_ref2","_asyncToGenerator","data","isValid","numeroAlquiler","nombreUsuario","numeroPlaca","fechaAlquiler","alquilerCollection","nuevoAlquiler","selectedDate","docRef","error","_x","apply","arguments","mostrarFecha","setHoravisible","ocultarFecha","confirmarFecha","setSelectedDate","contentContainerStyle","container","children","style","title","render","_ref3","_ref3$field","field","onChange","onBlur","value","label","onChangeText","name","rules","required","_ref4","_ref4$field","_ref5","_ref5$field","onPress","toDateString","onTouchStart","DatePicker","width","date","mode","placeholder","format","minDate","maxDate","confirmBtnText","cancelBtnText","onDateChange","color"],"sources":["C:/Users/ThinkPad/Desktop/loguin_ReactNative/componentes/AlquilarCarro.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, ScrollView, StyleSheet, FlatList} from \"react-native\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { TextInput, Button } from \"react-native-paper\";\r\nimport { useState } from \"react\";\r\nimport { styles } from \"../assets/estilos/alistyle\";\r\nimport DateTimePicker from \"react-native-modal-datetime-picker\";\r\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { firebaseConfig } from \"../firebaseconfig\";\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig)\r\nconst db = getFirestore(firebaseApp)\r\n\r\nexport default function AlquilarCarro({ route }) {\r\n    const {control, handleSubmit, formState} = useForm()\r\n    const { errors} = formState\r\n    const [message, setMessage] = useState('')\r\n    const [messageColor, setMessageColor] = useState(true)\r\n    const [dia, setDia] = useState(new Date())\r\n    const [show, setShow] = use\r\n\r\n    const onSubmit = async (data) => {\r\n        const isValid = !errors.numeroAlquiler && !errors.nombreUsuario && !errors.numeroPlaca && !errors.fechaAlquiler\r\n        if (isValid) {\r\n            //Crear registro de alquiler\r\n            const alquilerCollection = collection(db, 'alquileres')\r\n            const nuevoAlquiler = {\r\n                numeroAlquiler: data.nuevoAlquiler,\r\n                nombreUsuario: data.nombreUsuario,\r\n                numeroPlaca: data.numeroPlaca,\r\n                fechaAlquiler: selectedDate,\r\n            }\r\n            try {\r\n                const docRef = await addDoc (alquilerCollection, nuevoAlquiler)\r\n                setMessageColor(true)\r\n                setMessage('Alquiler exitoso')\r\n            }catch (error) {\r\n                setMessageColor(false)\r\n                setMessage('Error al realizar el alquiler')\r\n            }\r\n        }else {\r\n            setMessageColor(false)\r\n            setMessage('Verifique los datos del formulario')\r\n        }\r\n    }\r\n    //Funcion para mostrar fecha\r\n    const mostrarFecha = () => {\r\n        setHoravisible(true)\r\n    }\r\n    const ocultarFecha = () => {\r\n        setHoravisible(false)\r\n    }\r\n    const confirmarFecha = (Date) => {\r\n        setSelectedDate(Date)\r\n        ocultarFecha()\r\n    }\r\n    return (\r\n        <ScrollView contentContainerStyle={styles.container}>\r\n            <Text style={styles.title}>Alquiler de Carro</Text>\r\n            <Controller\r\n            control={control}\r\n            render={({ field: {onChange, onBlur, value}}) => (\r\n                <TextInput\r\n                    label= \"Numero de alquiler\"\r\n                    onBlur={onBlur}\r\n                    onChangeText={onChange}\r\n                    value={value}\r\n                />\r\n            )}\r\n            name=\"numeroAlquiler\"\r\n            rules={{\r\n                required: true\r\n            }}\r\n            />\r\n             <Controller\r\n            control={control}\r\n            render={({ field: {onChange, onBlur, value}}) => (\r\n                <TextInput\r\n                    label= \"Nombre de usuario\"\r\n                    onBlur={onBlur}\r\n                    onChangeText={onChange}\r\n                    value={value}\r\n                />\r\n            )}\r\n            name=\"nombreUsuario\"\r\n            rules={{\r\n                required: true\r\n            }}\r\n            />\r\n             <Controller\r\n            control={control}\r\n            render={({ field: {onChange, onBlur, value}}) => (\r\n                <TextInput\r\n                    label= \"Numero de placa\"\r\n                    onBlur={onBlur}\r\n                    onChangeText={onChange}\r\n                    value={value}\r\n                />\r\n            )}\r\n            name=\"numeroPlaca\"\r\n            rules={{\r\n                required: true\r\n            }}\r\n            />\r\n            <Button title=\"Seleccionar Fecha\" onPress={mostrarFecha}/>\r\n            <Text>\r\n            <TextInput\r\n                label=\"Fecha de alquiler\"\r\n                value={selectedDate ? selectedDate.toDateString() : \"Seleccionar fecha\"}\r\n                onTouchStart={mostrarFecha}\r\n            />\r\n            </Text>\r\n            <DatePicker\r\n                style={{ width: 200}}\r\n                date={selectedDate}\r\n                mode=\"date\"\r\n                placeholder=\"Seleccionar fecha\"\r\n                format=\"YYYY-MM-DD\"\r\n                minDate=\"2023-01-01\"\r\n                maxDate=\"2025-12-31\"\r\n                confirmBtnText=\"Confirmar\"\r\n                cancelBtnText=\"Cancelar\"\r\n                onDateChange={(date) => setSelectedDate(date)}\r\n            />\r\n\r\n            <Button\r\n                title=\"Alquilar\"\r\n                onPress={handleSubmit(onSubmit)}\r\n            />\r\n            {message && (\r\n                <Text style={{ color: messageColor ? 'green' : 'red'}}>{message}</Text>\r\n            )}\r\n        </ScrollView>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}