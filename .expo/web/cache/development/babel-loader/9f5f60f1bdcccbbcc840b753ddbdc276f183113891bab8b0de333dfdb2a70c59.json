{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextInput, Button } from \"react-native-paper\";\nimport { styles } from \"../assets/estilos/alistyle\";\nimport { ServicioLocal } from \"../componentes/ServicioLocal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function AlquilarCarro(_ref) {\n  var _route$params;\n  var route = _ref.route;\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    formState = _useForm.formState,\n    reset = _useForm.reset;\n  var errors = formState.errors;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messageColor = _useState6[0],\n    setMessageColor = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    carrosDisponibles = _useState8[0],\n    setCarrosDisponibles = _useState8[1];\n  useEffect(function () {\n    var fetchCarrosDisponibles = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        setIsLoading(true);\n        try {\n          var carros = yield ServicioLocal.obtenerCarrosDisponibles();\n          setCarrosDisponibles(carros);\n        } catch (error) {\n          console.error('Error al obtener carros disponibles: ', error.message);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function fetchCarrosDisponibles() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchCarrosDisponibles();\n  }, [(_route$params = route.params) == null ? void 0 : _route$params.registrosGuardados]);\n  var showMessage = function showMessage(text, color) {\n    setMessage(text);\n    setMessageColor(color);\n    var timer = setTimeout(function () {\n      setMessage('');\n      setMessageColor('');\n    }, 5000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  };\n  var onSubmit = function () {\n    var _ref3 = _asyncToGenerator(function* (data) {\n      var isValid = !errors.numeroAlquiler && !errors.nombreUsuario && !errors.numeroPlaca && !errors.fechaAlquiler;\n      if (isValid) {\n        try {\n          setIsLoading(true);\n          var carroDisponible = yield verificarDisponibilidad(data.numeroPlaca);\n          if (carroDisponible) {\n            yield realizarAlquiler(data.numeroPlaca);\n            showMessage('Alquiler exitoso', 'green');\n            reset();\n          } else {\n            showMessage('El carro no está disponible para alquilar', 'red');\n          }\n        } catch (error) {\n          showMessage('Error al realizar el alquiler', 'red');\n          showMessage('Error al realizar el alquiler', error.message);\n        } finally {\n          setIsLoading(false);\n        }\n      } else {\n        showMessage('Verifica los datos del formulario', 'red');\n      }\n    });\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var verificarDisponibilidad = function () {\n    var _ref4 = _asyncToGenerator(function* (numeroPlaca) {\n      try {\n        var carrosRegistrados = yield ServicioLocal.obtenerCarrosDisponibles();\n        return carrosRegistrados.some(function (carro) {\n          return carro.placa === numeroPlaca && carro.state === 'Disponible';\n        });\n      } catch (error) {\n        console.log('Error al verificar disponibilidad del carro: ', error.message);\n        return false;\n      }\n    });\n    return function verificarDisponibilidad(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var realizarAlquiler = function () {\n    var _ref5 = _asyncToGenerator(function* (numeroPlaca) {\n      try {\n        yield ServicioLocal.actualizarEstadoCarro(numeroPlaca, 'No disponible');\n        var nuevosCarrosDisponibles = carrosDisponibles.filter(function (carro) {\n          return carro.placa !== numeroPlaca;\n        });\n        setCarrosDisponibles(nuevosCarrosDisponibles);\n      } catch (error) {\n        console.log('Error al actualizar el estado del carro: ', error.message);\n      }\n    });\n    return function realizarAlquiler(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.container\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","Text","ScrollView","useForm","Controller","TextInput","Button","styles","ServicioLocal","jsx","_jsx","AlquilarCarro","_ref","_route$params","route","_useForm","control","handleSubmit","formState","reset","errors","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","message","setMessage","_useState5","_useState6","messageColor","setMessageColor","_useState7","_useState8","carrosDisponibles","setCarrosDisponibles","fetchCarrosDisponibles","_ref2","_asyncToGenerator","carros","obtenerCarrosDisponibles","error","console","apply","arguments","params","registrosGuardados","showMessage","text","color","timer","setTimeout","clearTimeout","onSubmit","_ref3","data","isValid","numeroAlquiler","nombreUsuario","numeroPlaca","fechaAlquiler","carroDisponible","verificarDisponibilidad","realizarAlquiler","_x","_ref4","carrosRegistrados","some","carro","placa","state","log","_x2","_ref5","actualizarEstadoCarro","nuevosCarrosDisponibles","filter","_x3","contentContainerStyle","container"],"sources":["C:/Users/507/Desktop/loguin/componentes/AlquilarCarro.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Text, ScrollView } from \"react-native\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { TextInput, Button } from \"react-native-paper\";\r\nimport { styles } from \"../assets/estilos/alistyle\";\r\nimport { ServicioLocal } from \"../componentes/ServicioLocal\";\r\n\r\nexport default function AlquilarCarro({ route }) {\r\n    const { control, handleSubmit, formState, reset } = useForm()\r\n    const { errors } = formState;\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [message, setMessage] = useState('')\r\n    const [messageColor, setMessageColor] = useState('')\r\n    const [carrosDisponibles, setCarrosDisponibles] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchCarrosDisponibles = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const carros = await ServicioLocal.obtenerCarrosDisponibles();\r\n                setCarrosDisponibles(carros);\r\n            } catch (error) {\r\n                console.error('Error al obtener carros disponibles: ', error.message);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n        fetchCarrosDisponibles();\r\n    }, [route.params?.registrosGuardados]);\r\n\r\n    const showMessage = (text, color) => {\r\n        setMessage(text);\r\n        setMessageColor(color);\r\n        const timer = setTimeout(() => {\r\n            setMessage('');\r\n            setMessageColor('');\r\n        }, 5000);\r\n        return () => clearTimeout(timer);\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        const isValid = !errors.numeroAlquiler && !errors.nombreUsuario && !errors.numeroPlaca && !errors.fechaAlquiler;\r\n        if (isValid) {\r\n            try {\r\n                setIsLoading(true);\r\n                const carroDisponible = await verificarDisponibilidad(data.numeroPlaca);\r\n                if (carroDisponible) {\r\n                    await realizarAlquiler(data.numeroPlaca);\r\n                    showMessage('Alquiler exitoso', 'green');\r\n                    reset();\r\n                } else {\r\n                    showMessage('El carro no está disponible para alquilar', 'red');\r\n                }\r\n            } catch (error) {\r\n                showMessage('Error al realizar el alquiler', 'red');\r\n                showMessage('Error al realizar el alquiler', error.message);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        } else {\r\n            showMessage('Verifica los datos del formulario', 'red');\r\n        }\r\n    };\r\n\r\n    const verificarDisponibilidad = async (numeroPlaca) => {\r\n        try {\r\n            const carrosRegistrados = await ServicioLocal.obtenerCarrosDisponibles();\r\n            return carrosRegistrados.some((carro) => carro.placa === numeroPlaca && carro.state === 'Disponible');\r\n        } catch (error) {\r\n            console.log('Error al verificar disponibilidad del carro: ', error.message);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const realizarAlquiler = async (numeroPlaca) => {\r\n        try {\r\n            await ServicioLocal.actualizarEstadoCarro(numeroPlaca, 'No disponible');\r\n            const nuevosCarrosDisponibles = carrosDisponibles.filter((carro) => carro.placa !== numeroPlaca);\r\n            setCarrosDisponibles(nuevosCarrosDisponibles);\r\n        } catch (error) {\r\n            console.log('Error al actualizar el estado del carro: ', error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView contentContainerStyle={styles.container}>\r\n            {/* Resto del código... */}\r\n        </ScrollView>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}