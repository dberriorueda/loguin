{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextInput, Button } from \"react-native-paper\";\nimport { Picker } from '@react-native-picker/picker';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var _errors$placa, _errors$placa2, _errors$placa3, _errors$placa4, _errors$brand, _errors$brand2, _errors$brand3, _errors$brand4;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useForm = useForm({\n      defaultValues: {\n        placa: \"\",\n        brand: \"\",\n        state: \"disponible\"\n      }\n    }),\n    control = _useForm.control,\n    reset = _useForm.reset,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsxs(Text, {\n      children: [\"Bienvenido \", route.params.nombreusuario]\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        maxlength: 20,\n        minlength: 1,\n        pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'°0-9 ]+$/\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(TextInput, {\n          label: \"Numero de Placa\",\n          style: {\n            fontFamily: 'inital'\n          },\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"placa\"\n    }), ((_errors$placa = errors.placa) == null ? void 0 : _errors$placa.type) == \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Numero de placa es obligatorio.\"\n    }), ((_errors$placa2 = errors.placa) == null ? void 0 : _errors$placa2.type) == \"maxlength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud debe ser de 20.\"\n    }), ((_errors$placa3 = errors.placa) == null ? void 0 : _errors$placa3.type) == \"minlength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud minima debe ser de 1.\"\n    }), ((_errors$placa4 = errors.placa) == null ? void 0 : _errors$placa4.type) == \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \".\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        maxlength: 10,\n        minlength: 1,\n        pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$/\n      },\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n        return _jsx(TextInput, {\n          style: {\n            fontFamily: 'inital'\n          },\n          label: \"Marca del Vehiculo\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"brand\"\n    }), ((_errors$brand = errors.brand) == null ? void 0 : _errors$brand.type) == \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Escribe la marca.\"\n    }), ((_errors$brand2 = errors.brand) == null ? void 0 : _errors$brand2.type) == \"maxLength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud debe ser de 10.\"\n    }), ((_errors$brand3 = errors.brand) == null ? void 0 : _errors$brand3.type) == \"minLength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud m\\xEDnima debe ser de 1\"\n    }), ((_errors$brand4 = errors.brand) == null ? void 0 : _errors$brand4.type) == \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \".\"\n    }), _jsxs(Picker, {\n      selectedValue: control.getValues(\"state\"),\n      onValueChange: function onValueChange(Value) {\n        return control.setValue(\"state\", Value);\n      },\n      style: {\n        height: 50,\n        width: 200\n      },\n      children: [_jsx(Picker.Item, {\n        label: \"Disponible\",\n        value: \"Disponible\"\n      }), _jsx(Picker.Item, {\n        label: \"No Disponible\",\n        value: \"No Disponible\"\n      })]\n    }), _jsx(Button, {\n      style: {\n        marginTop: 20,\n        backgroundColor: 'red'\n      },\n      icon: \"content-save\",\n      mode: \"outlined\",\n      onPress: handleSubmit(onSubmit),\n      children: \"Guardar\"\n    })]\n  });\n}","map":{"version":3,"names":["useForm","Controller","TextInput","Button","Picker","jsxs","_jsxs","jsx","_jsx","HomeScreen","_ref","_errors$placa","_errors$placa2","_errors$placa3","_errors$placa4","_errors$brand","_errors$brand2","_errors$brand3","_errors$brand4","navigation","route","_useForm","defaultValues","placa","brand","state","control","reset","handleSubmit","errors","formState","onSubmit","data","console","log","View","style","flex","alignItems","justifyContent","children","Text","params","nombreusuario","rules","required","maxlength","minlength","pattern","render","_ref2","_ref2$field","field","onChange","onBlur","value","label","fontFamily","onChangeText","name","type","color","_ref3","_ref3$field","selectedValue","getValues","onValueChange","Value","setValue","height","width","Item","marginTop","backgroundColor","icon","mode","onPress"],"sources":["C:/Users/ThinkPad/Desktop/loguin_ReactNative/componentes/HomeScreen.js"],"sourcesContent":["\r\n  import { View, Text,} from \"react-native\";\r\n  import {useForm, Controller} from 'react-hook-form';\r\n  import { TextInput, Button } from \"react-native-paper\";\r\n  import { Picker } from '@react-native-picker/picker';\r\n\r\n\r\n  export default function HomeScreen({navigation, route}){\r\n\r\n      const {\r\n          control, reset,\r\n          handleSubmit,\r\n          formState:{errors},\r\n      } = useForm({\r\n          defaultValues: {\r\n              placa:\"\",\r\n              brand:\"\",\r\n              state:\"disponible\",\r\n          },\r\n      });\r\n      const onSubmit = (data)=> {\r\n        console.log(data);\r\n      }\r\n      return(\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center',}}>\r\n              <Text>Bienvenido {route.params.nombreusuario}</Text>\r\n              <Controller\r\n                control={control}\r\n                rules={{\r\n                    required: true,\r\n                    maxlength:20,\r\n                    minlength:1,\r\n                    pattern:/^[A-ZÑa-zñáéíóúÁÉÍÓÚ'°0-9 ]+$/\r\n                }}\r\n                render={({field:{onChange,onBlur,value}}) =>(\r\n                    <TextInput\r\n                        label=\"Numero de Placa\" style={{fontFamily: 'inital'}}\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                    />\r\n                )}\r\n                name=\"placa\"\r\n                />\r\n                {errors.placa?.type == \"required\" && <Text style={{color:'red'}}>Numero de placa es obligatorio.</Text>}\r\n                {errors.placa?.type == \"maxlength\" && <Text style={{color:'red'}}>La longitud debe ser de 20.</Text>}\r\n                {errors.placa?.type == \"minlength\" && <Text style={{color:'red'}}>La longitud minima debe ser de 1.</Text>}\r\n                {errors.placa?.type == \"pattern\" && <Text style={{color:'red'}}>.</Text>}\r\n\r\n            <Controller\r\n              control={control}\r\n              rules={{\r\n                  required:true,\r\n                  maxlength:10,\r\n                  minlength:1,\r\n                  pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$/,\r\n                  //Ingresar numeros para eso se usa el pattern\r\n                }}\r\n                render={({ field: {onChange,onBlur,value}})=>(\r\n                  <TextInput\r\n                  style={{fontFamily:'inital'}}\r\n                  label=\"Marca del Vehiculo\"\r\n                  onBlur={onBlur}\r\n                  onChangeText={onChange}\r\n                  value={value}\r\n                />\r\n              )}\r\n              name=\"brand\"\r\n            />\r\n            {errors.brand?.type == \"required\" && <Text style={{color:'red'}}>Escribe la marca.</Text>}\r\n            {errors.brand?.type == \"maxLength\" && <Text style={{color:'red'}}>La longitud debe ser de 10.</Text>}\r\n            {errors.brand?.type == \"minLength\" && <Text style={{color:'red'}}>La longitud mínima debe ser de 1</Text>}\r\n            {errors.brand?.type == \"pattern\" && <Text style={{color:'red'}}>.</Text>}\r\n\r\n            <Picker\r\n              selectedValue={control.getValues(\"state\")}\r\n              onValueChange={(Value)=> control.setValue(\"state\", Value)}\r\n              style={{height: 50, width: 200}}\r\n            > \r\n              <Picker.Item label=\"Disponible\" value=\"Disponible\" />\r\n              <Picker.Item label=\"No Disponible\" value=\"No Disponible\" />\r\n\r\n            </Picker>\r\n            \r\n            <Button\r\n                  style={{marginTop:20, backgroundColor:'red'}}\r\n                  icon=\"content-save\"\r\n                  mode=\"outlined\"\r\n                  onPress={handleSubmit(onSubmit)}\r\n                  >\r\n                    Guardar\r\n                  </Button>\r\n              {/*<Button title=\"submit\" onPress={handlesubmit(onSubmit)}/> */}\r\n          </View>\r\n      );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}