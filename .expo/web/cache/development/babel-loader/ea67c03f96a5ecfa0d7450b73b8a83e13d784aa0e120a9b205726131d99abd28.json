{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextInput, Button } from \"react-native-paper\";\nimport { firebaseConfig } from \"../firebaseconfig\";\nimport { useState } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var _errors$placa, _errors$placa2, _errors$placa3, _errors$placa4, _errors$brand, _errors$brand2, _errors$brand3, _errors$brand4, _errors$state, _errors$state2, _errors$state3, _errors$state4;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    placa = _useState2[0],\n    setPlaca = _useState2[1];\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsxs(Text, {\n      children: [\"Bienvenido \", route.params.nombreusuario]\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        maxlength: 20,\n        minlength: 1,\n        pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'°0-9 ]+$/\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(TextInput, {\n          label: \"Numero de Placa\",\n          style: {\n            fontFamily: 'initial'\n          },\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"placa\"\n    }), ((_errors$placa = errors.placa) == null ? void 0 : _errors$placa.type) === \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Numero de placa es obligatorio.\"\n    }), ((_errors$placa2 = errors.placa) == null ? void 0 : _errors$placa2.type) === \"maxlength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud debe ser de 20.\"\n    }), ((_errors$placa3 = errors.placa) == null ? void 0 : _errors$placa3.type) === \"minlength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud m\\xEDnima debe ser de 1.\"\n    }), ((_errors$placa4 = errors.placa) == null ? void 0 : _errors$placa4.type) === \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \".\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        maxLength: 10,\n        minlength: 1,\n        pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$/\n      },\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n        return _jsx(TextInput, {\n          style: {\n            fontFamily: 'initial'\n          },\n          label: \"Marca del Vehiculo\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"brand\"\n    }), ((_errors$brand = errors.brand) == null ? void 0 : _errors$brand.type) === \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Escribe la marca.\"\n    }), ((_errors$brand2 = errors.brand) == null ? void 0 : _errors$brand2.type) === \"maxLength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud debe ser de 10.\"\n    }), ((_errors$brand3 = errors.brand) == null ? void 0 : _errors$brand3.type) === \"minLength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud m\\xEDnima debe ser de 1\"\n    }), ((_errors$brand4 = errors.brand) == null ? void 0 : _errors$brand4.type) === \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \".\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        maxLength: 10,\n        minlength: 1,\n        pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$/\n      },\n      render: function render(_ref4) {\n        var _ref4$field = _ref4.field,\n          onChange = _ref4$field.onChange,\n          onBlur = _ref4$field.onBlur,\n          value = _ref4$field.value;\n        return _jsx(TextInput, {\n          style: {\n            fontFamily: 'initial'\n          },\n          label: \"Estado del vehiculo\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"state\"\n    }), ((_errors$state = errors.state) == null ? void 0 : _errors$state.type) === \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Escribe el estado del carro.\"\n    }), ((_errors$state2 = errors.state) == null ? void 0 : _errors$state2.type) === \"maxLength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud debe ser de 10.\"\n    }), ((_errors$state3 = errors.state) == null ? void 0 : _errors$state3.type) === \"minLength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud m\\xEDnima debe ser de 1\"\n    }), ((_errors$state4 = errors.state) == null ? void 0 : _errors$state4.type) === \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \".\"\n    }), _jsx(Button, {\n      style: {\n        marginTop: 20,\n        backgroundColor: 'red'\n      },\n      icon: \"content-save\",\n      mode: \"outlined\",\n      onPress: handleSubmit(onSubmit),\n      children: \"Guardar\"\n    })]\n  });\n}","map":{"version":3,"names":["useForm","Controller","TextInput","Button","firebaseConfig","useState","jsxs","_jsxs","jsx","_jsx","HomeScreen","_ref","_errors$placa","_errors$placa2","_errors$placa3","_errors$placa4","_errors$brand","_errors$brand2","_errors$brand3","_errors$brand4","_errors$state","_errors$state2","_errors$state3","_errors$state4","navigation","route","_useState","_useState2","_slicedToArray","placa","setPlaca","View","style","flex","alignItems","justifyContent","children","Text","params","nombreusuario","control","rules","required","maxlength","minlength","pattern","render","_ref2","_ref2$field","field","onChange","onBlur","value","label","fontFamily","onChangeText","name","errors","type","color","maxLength","_ref3","_ref3$field","brand","_ref4","_ref4$field","state","marginTop","backgroundColor","icon","mode","onPress","handleSubmit","onSubmit"],"sources":["C:/Users/ThinkPad/Desktop/loguin_ReactNative/componentes/HomeScreen.js"],"sourcesContent":["import { View, Text,} from \"react-native\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { TextInput, Button } from \"react-native-paper\";\r\n//firebase\r\nimport {firebaseConfig} from '../firebaseconfig';\r\nimport { useState } from \"react\";\r\n\r\nexport default function HomeScreen({ navigation, route }) {\r\n    const [placa, setPlaca] = useState('')\r\n\r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <Text>Bienvenido {route.params.nombreusuario}</Text>\r\n            <Controller\r\n                control={control}\r\n                rules={{\r\n                    required: true,\r\n                    maxlength: 20,\r\n                    minlength: 1,\r\n                    pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'°0-9 ]+$/,\r\n                }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        label=\"Numero de Placa\"\r\n                        style={{ fontFamily: 'initial' }}\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                    />\r\n                )}\r\n                name=\"placa\"\r\n            />\r\n            {errors.placa?.type === \"required\" && <Text style={{ color: 'red' }}>Numero de placa es obligatorio.</Text>}\r\n            {errors.placa?.type === \"maxlength\" && <Text style={{ color: 'red' }}>La longitud debe ser de 20.</Text>}\r\n            {errors.placa?.type === \"minlength\" && <Text style={{ color: 'red' }}>La longitud mínima debe ser de 1.</Text>}\r\n            {errors.placa?.type === \"pattern\" && <Text style={{ color: 'red' }}>.</Text>}\r\n\r\n            <Controller\r\n                control={control}\r\n                rules={{\r\n                    required: true,\r\n                    maxLength: 10,\r\n                    minlength: 1,\r\n                    pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$/,\r\n                    // Ingresar numeros para eso se usa el pattern\r\n                }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        style={{ fontFamily: 'initial' }}\r\n                        label=\"Marca del Vehiculo\"\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                    />\r\n                )}\r\n                name=\"brand\"\r\n            />\r\n            {errors.brand?.type === \"required\" && <Text style={{ color: 'red' }}>Escribe la marca.</Text>}\r\n            {errors.brand?.type === \"maxLength\" && <Text style={{ color: 'red' }}>La longitud debe ser de 10.</Text>}\r\n            {errors.brand?.type === \"minLength\" && <Text style={{ color: 'red' }}>La longitud mínima debe ser de 1</Text>}\r\n            {errors.brand?.type === \"pattern\" && <Text style={{ color: 'red' }}>.</Text>}\r\n\r\n            <Controller\r\n                control={control}\r\n                rules={{\r\n                  required:true,\r\n                  maxLength:10,\r\n                  minlength:1,\r\n                  pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$/,\r\n                }}\r\n                render={({field: { onChange,onBlur, value}}) => (\r\n                    <TextInput\r\n                        style={{ fontFamily: 'initial'}}\r\n                        label=\"Estado del vehiculo\"\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n\r\n                    />\r\n                )}\r\n                name=\"state\"\r\n            />\r\n            {errors.state?.type === \"required\" && <Text style={{ color: 'red' }}>Escribe el estado del carro.</Text>}\r\n            {errors.state?.type === \"maxLength\" && <Text style={{ color: 'red' }}>La longitud debe ser de 10.</Text>}\r\n            {errors.state?.type === \"minLength\" && <Text style={{ color: 'red' }}>La longitud mínima debe ser de 1</Text>}\r\n            {errors.state?.type === \"pattern\" && <Text style={{ color: 'red' }}>.</Text>}\r\n\r\n            \r\n\r\n            <Button\r\n                style={{ marginTop: 20, backgroundColor: 'red' }}\r\n                icon=\"content-save\"\r\n                mode=\"outlined\"\r\n                onPress={handleSubmit(onSubmit)}\r\n            >\r\n                Guardar\r\n            </Button>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}