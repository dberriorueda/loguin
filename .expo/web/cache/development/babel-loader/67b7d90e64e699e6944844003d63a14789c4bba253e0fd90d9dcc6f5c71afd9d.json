{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var ServicioLocal = {\n  obtenerCarrosDisponibles: function () {\n    var _obtenerCarrosDisponibles = _asyncToGenerator(function* () {\n      try {\n        var registros = yield AsyncStorage.getItem('RegistrosGuardados');\n        return JSON.parse(registros) || [];\n      } catch (error) {\n        console.log(\"Error al obtener carros disponibles: \", error.message);\n        return [];\n      }\n    });\n    function obtenerCarrosDisponibles() {\n      return _obtenerCarrosDisponibles.apply(this, arguments);\n    }\n    return obtenerCarrosDisponibles;\n  }(),\n  obtenerCarrosDisponibles: function () {\n    var _obtenerCarrosDisponibles2 = _asyncToGenerator(function* () {\n      try {\n        var todoslosCarros = yield ServicioLocal.obtenerTodosLosCarros();\n        return todoslosCarros.filter(function (carro) {\n          return carro.state === 'Disponible';\n        });\n      } catch (error) {\n        console.log(\"error al obtener carros disponibles: \", error.message);\n        return [];\n      }\n    });\n    function obtenerCarrosDisponibles() {\n      return _obtenerCarrosDisponibles2.apply(this, arguments);\n    }\n    return obtenerCarrosDisponibles;\n  }(),\n  actualizarEstadoCarro: async\n};","map":{"version":3,"names":["AsyncStorage","ServicioLocal","obtenerCarrosDisponibles","_obtenerCarrosDisponibles","_asyncToGenerator","registros","getItem","JSON","parse","error","console","log","message","apply","arguments","_obtenerCarrosDisponibles2","todoslosCarros","obtenerTodosLosCarros","filter","carro","state","actualizarEstadoCarro","async"],"sources":["C:/Users/ThinkPad/Desktop/loguin_ReactNative/componentes/ServicioLocal.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const ServicioLocal = {\r\n    obtenerCarrosDisponibles: async () => {\r\n        try {\r\n            const registros = await AsyncStorage.getItem('RegistrosGuardados')\r\n            return JSON.parse(registros) || []\r\n        } catch (error) {\r\n            console.log(\"Error al obtener carros disponibles: \", error.message)\r\n            return []\r\n        }\r\n    },\r\n\r\n    obtenerCarrosDisponibles: async () => {\r\n        try{\r\n            const todoslosCarros = await ServicioLocal.obtenerTodosLosCarros()\r\n            return todoslosCarros.filter(carro => carro.state === 'Disponible')\r\n        }catch (error) {\r\n            console.log(\"error al obtener carros disponibles: \", error.message)\r\n            return []\r\n        }\r\n    },\r\n    \r\n    actualizarEstadoCarro: async \r\n};\r\n"],"mappings":";AAAA,OAAOA,YAAY,MAAM,2CAA2C;AAEpE,OAAO,IAAMC,aAAa,GAAG;EACzBC,wBAAwB;IAAA,IAAAC,yBAAA,GAAAC,iBAAA,CAAE,aAAY;MAClC,IAAI;QACA,IAAMC,SAAS,SAASL,YAAY,CAACM,OAAO,CAAC,oBAAoB,CAAC;QAClE,OAAOC,IAAI,CAACC,KAAK,CAACH,SAAS,CAAC,IAAI,EAAE;MACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEF,KAAK,CAACG,OAAO,CAAC;QACnE,OAAO,EAAE;MACb;IACJ,CAAC;IAAA,SAAAV,yBAAA;MAAA,OAAAC,yBAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAZ,wBAAA;EAAA;EAEDA,wBAAwB;IAAA,IAAAa,0BAAA,GAAAX,iBAAA,CAAE,aAAY;MAClC,IAAG;QACC,IAAMY,cAAc,SAASf,aAAa,CAACgB,qBAAqB,CAAC,CAAC;QAClE,OAAOD,cAAc,CAACE,MAAM,CAAC,UAAAC,KAAK;UAAA,OAAIA,KAAK,CAACC,KAAK,KAAK,YAAY;QAAA,EAAC;MACvE,CAAC,QAAOX,KAAK,EAAE;QACXC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEF,KAAK,CAACG,OAAO,CAAC;QACnE,OAAO,EAAE;MACb;IACJ,CAAC;IAAA,SAAAV,yBAAA;MAAA,OAAAa,0BAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAZ,wBAAA;EAAA;EAEDmB,qBAAqB,EAAEC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}