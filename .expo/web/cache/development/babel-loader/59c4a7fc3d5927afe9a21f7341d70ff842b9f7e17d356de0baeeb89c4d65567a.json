{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextInput } from \"react-native-paper\";\nimport { styles } from \"../assets/estilos/alistyle\";\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { firebaseConfig } from \"../firebaseconfig\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseApp = initializeApp(firebaseConfig);\nvar db = getFirestore(firebaseApp);\nexport default function AlquilarCarro(_ref) {\n  var route = _ref.route;\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    formState = _useForm.formState;\n  var errors = formState.errors;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messageColor = _useState4[0],\n    setMessageColor = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isDatePickerVisible = _useState6[0],\n    setDatePickerVisibility = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedDate = _useState8[0],\n    setSelectedDate = _useState8[1];\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n  var handleConfirm = function handleConfirm(date) {\n    setDatePickerVisibilityselectedDate(date.toISOString().split('T')[0]);\n    hideDatePicker();\n  };\n  var onSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      var isValid = !errors.numeroAlquiler && !errors.nombreUsuario && !errors.numeroPlaca && selectedDate;\n      if (isValid) {\n        var alquilerCollection = collection(db, 'alquileres');\n        var nuevoAlquiler = {\n          numeroAlquiler: data.numeroAlquiler,\n          nombreUsuario: data.nombreUsuario,\n          numeroPlaca: data.numeroPlaca,\n          fechaAlquiler: selectedDate\n        };\n        try {\n          yield addDoc(alquilerCollection, nuevoAlquiler);\n          setMessageColor(true);\n          setMessage('Alquiler exitoso');\n        } catch (error) {\n          setMessageColor(false);\n          setMessage('Error al realizar el alquiler');\n        }\n      } else {\n        setMessageColor(false);\n        setMessage('Verifique los datos del formulario');\n      }\n    });\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Alquiler de Carros\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n        return _jsx(TextInput, {\n          label: \"Numero de alquiler\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value,\n          error: errors.numeroAlquiler ? true : false\n        });\n      },\n      name: \"numeroAlquiler\",\n      rules: {\n        required: \"Este campo es obligatorio\"\n      }\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref4) {\n        var _ref4$field = _ref4.field,\n          onChange = _ref4$field.onChange,\n          onBlur = _ref4$field.onBlur,\n          value = _ref4$field.value;\n        return _jsx(TextInput, {\n          label: \"Nombre de usuario\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value,\n          error: errors.nombreUsuario ? true : false\n        });\n      },\n      name: \"nombreUsuario\",\n      rules: {\n        required: \"Este campo es obligatorio\"\n      }\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref5) {\n        var _ref5$field = _ref5.field,\n          onChange = _ref5$field.onChange,\n          onBlur = _ref5$field.onBlur,\n          value = _ref5$field.value;\n        return _jsx(TextInput, {\n          label: \"Numero de placa\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value,\n          error: errors.numeroPlaca ? true : false\n        });\n      },\n      name: \"numeroPlaca\",\n      rules: {\n        required: \"Este campo es obligatorio\"\n      }\n    }), _jsx(Button, {\n      mode: \"outlined\",\n      onPress: showDatePicker,\n      style: {\n        marginTop: 16,\n        alignSelf: \"center\"\n      },\n      children: \"Seleccione fecha\"\n    }), selectedDate && _jsxs(Text, {\n      style: {\n        marginTop: 8\n      },\n      children: [\"Fecha seleccionada: \", selectedDate.toDateString()]\n    }), _jsx(DateTimePickerModal, {\n      isVisible: isDatePickerVisible,\n      mode: \"date\",\n      onConfirm: handleConfirm,\n      onCancel: hideDatePicker\n    }), _jsx(Button, {\n      mode: \"contained\",\n      style: {\n        marginTop: 20\n      },\n      onPress: handleSubmit(onSubmit),\n      children: \"Alquilar\"\n    }), message && _jsx(Text, {\n      style: {\n        color: messageColor ? 'green' : 'red',\n        marginTop: 20,\n        textAlign: 'center'\n      },\n      children: message\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Text","ScrollView","Button","useForm","Controller","TextInput","styles","getFirestore","collection","addDoc","initializeApp","firebaseConfig","DateTimePickerModal","jsx","_jsx","jsxs","_jsxs","firebaseApp","db","AlquilarCarro","_ref","route","_useForm","control","handleSubmit","formState","errors","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","messageColor","setMessageColor","_useState5","_useState6","isDatePickerVisible","setDatePickerVisibility","_useState7","_useState8","selectedDate","setSelectedDate","showDatePicker","hideDatePicker","handleConfirm","date","setDatePickerVisibilityselectedDate","toISOString","split","onSubmit","_ref2","_asyncToGenerator","data","isValid","numeroAlquiler","nombreUsuario","numeroPlaca","alquilerCollection","nuevoAlquiler","fechaAlquiler","error","_x","apply","arguments","contentContainerStyle","container","children","style","title","render","_ref3","_ref3$field","field","onChange","onBlur","value","label","onChangeText","name","rules","required","_ref4","_ref4$field","_ref5","_ref5$field","mode","onPress","marginTop","alignSelf","toDateString","isVisible","onConfirm","onCancel","color","textAlign"],"sources":["C:/Users/ThinkPad/Desktop/loguin_ReactNative/componentes/AlquilarCarro.js"],"sourcesContent":["import React, { useState} from \"react\";\r\nimport { Text, ScrollView, Button} from \"react-native\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { TextInput, } from \"react-native-paper\";\r\nimport { styles } from \"../assets/estilos/alistyle\";\r\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { firebaseConfig } from \"../firebaseconfig\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig)\r\nconst db = getFirestore(firebaseApp)\r\n\r\nexport default function AlquilarCarro({ route }) {\r\n    const {control, handleSubmit, formState} = useForm()\r\n    const {errors} = formState\r\n    const [message, setMessage] = useState('')\r\n    const [messageColor, setMessageColor] = useState(true)\r\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false)\r\n    const [selectedDate, setSelectedDate] = useState('')\r\n\r\n    const showDatePicker = () => {\r\n        setDatePickerVisibility(true)\r\n    }\r\n\r\n    const hideDatePicker = () => {\r\n        setDatePickerVisibility(false)\r\n    }\r\n\r\n    const handleConfirm = (date) => {\r\n        setDatePickerVisibilityselectedDate(date.toISOString().split('T')[0])\r\n        hideDatePicker()\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        const isValid = !errors.numeroAlquiler && !errors.nombreUsuario && !errors.numeroPlaca && selectedDate\r\n        if (isValid) {\r\n            //Crear registro de alquiler\r\n            const alquilerCollection = collection(db, 'alquileres')\r\n            const nuevoAlquiler = {\r\n                numeroAlquiler: data.numeroAlquiler,\r\n                nombreUsuario: data.nombreUsuario,\r\n                numeroPlaca: data.numeroPlaca,\r\n                fechaAlquiler: selectedDate,\r\n            }     \r\n            try {\r\n                await addDoc(alquilerCollection, nuevoAlquiler)\r\n                setMessageColor(true)\r\n                setMessage('Alquiler exitoso')\r\n            }catch (error) {\r\n                //console.log('Error al realizar el alquiler:', error)\r\n                setMessageColor(false)\r\n                setMessage('Error al realizar el alquiler')\r\n            }\r\n        }else {\r\n            setMessageColor(false)\r\n            setMessage('Verifique los datos del formulario')\r\n        }\r\n    }\r\n    return (\r\n        <ScrollView contentContainerStyle={styles.container}>\r\n            <Text style={styles.title}>Alquiler de Carros</Text>\r\n            <Controller\r\n                control={control}\r\n                render={({ field: {onChange, onBlur, value}}) => (\r\n                    <TextInput\r\n                        label= \"Numero de alquiler\"\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                        error={errors.numeroAlquiler ? true : false}\r\n                    />\r\n                )}\r\n                name=\"numeroAlquiler\"\r\n                rules={{\r\n                    required: \"Este campo es obligatorio\"\r\n                }}\r\n            />\r\n             <Controller\r\n                control={control}\r\n                render={({ field: {onChange, onBlur, value}}) => (\r\n                    <TextInput\r\n                        label= \"Nombre de usuario\"\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                        error={errors.nombreUsuario ? true : false}\r\n                    />\r\n                )}\r\n                name=\"nombreUsuario\"\r\n                rules={{\r\n                    required: \"Este campo es obligatorio\"\r\n                }}\r\n            />\r\n             <Controller\r\n                control={control}\r\n                render={({ field: {onChange, onBlur, value}}) => (\r\n                    <TextInput\r\n                        label= \"Numero de placa\"\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                        error={errors.numeroPlaca ? true : false}\r\n                    />\r\n                )}\r\n                name=\"numeroPlaca\"\r\n                rules={{\r\n                    required: \"Este campo es obligatorio\"\r\n                }}\r\n            />\r\n            <Button\r\n                mode=\"outlined\"\r\n                onPress={showDatePicker}\r\n                style={{ marginTop: 16, alignSelf: \"center\"}}\r\n            >\r\n                Seleccione fecha\r\n            </Button>\r\n            {selectedDate && (\r\n                <Text style={{ marginTop: 8}}>\r\n                    Fecha seleccionada: {selectedDate.toDateString()}\r\n                </Text>\r\n            )}  \r\n            <DateTimePickerModal\r\n                isVisible={isDatePickerVisible}\r\n                mode=\"date\"\r\n                onConfirm={handleConfirm}\r\n                onCancel={hideDatePicker}\r\n            />\r\n            <Button\r\n                mode=\"contained\"\r\n                style={{ marginTop: 20}}\r\n                onPress={handleSubmit(onSubmit)}\r\n            >\r\n                Alquilar\r\n            </Button>\r\n            {message && (\r\n                <Text style={{ color: messageColor ? 'green' : 'red', marginTop:20, textAlign: 'center'}}>\r\n                    {message}\r\n                </Text>\r\n            )}\r\n        </ScrollView>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}