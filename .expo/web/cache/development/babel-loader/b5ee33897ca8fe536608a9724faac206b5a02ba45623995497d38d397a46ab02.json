{"ast":null,"code":"import React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useForm, Controller, Form } from 'react-hook-form';\nimport { TextInput, Button } from \"react-native-paper\";\nimport { Picker } from '@react-native-picker/picker';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var _errors$placa, _errors$placa2, _errors$placa3, _errors$placa4, _errors$brand, _errors$brand2, _errors$brand3, _errors$brand4;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useForm = useForm({\n      defaultValues: {\n        placa: \"\",\n        brand: \"\",\n        state: \"disponible\"\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsxs(Text, {\n      children: [\"Bienvenido \", route.params.nombreusuario]\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        maxlength: 20,\n        minlength: 1,\n        pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'°0-9 ]+$/\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(TextInput, {\n          label: \"Numero de Placa\",\n          style: {\n            fontFamily: 'initial'\n          },\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"placa\"\n    }), ((_errors$placa = errors.placa) == null ? void 0 : _errors$placa.type) === \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Numero de placa es obligatorio.\"\n    }), ((_errors$placa2 = errors.placa) == null ? void 0 : _errors$placa2.type) === \"maxlength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud debe ser de 20.\"\n    }), ((_errors$placa3 = errors.placa) == null ? void 0 : _errors$placa3.type) === \"minlength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud m\\xEDnima debe ser de 1.\"\n    }), ((_errors$placa4 = errors.placa) == null ? void 0 : _errors$placa4.type) === \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \".\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        maxLength: 10,\n        minlength: 1,\n        pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$/\n      },\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n        return _jsx(TextInput, {\n          style: {\n            fontFamily: 'initial'\n          },\n          label: \"Marca del Vehiculo\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"brand\"\n    }), ((_errors$brand = errors.brand) == null ? void 0 : _errors$brand.type) === \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Escribe la marca.\"\n    }), ((_errors$brand2 = errors.brand) == null ? void 0 : _errors$brand2.type) === \"maxLength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud debe ser de 10.\"\n    }), ((_errors$brand3 = errors.brand) == null ? void 0 : _errors$brand3.type) === \"minLength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La longitud m\\xEDnima debe ser de 1\"\n    }), ((_errors$brand4 = errors.brand) == null ? void 0 : _errors$brand4.type) === \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \".\"\n    }), _jsxs(Picker, {\n      selectedValue: control.getValues(\"state\"),\n      onValueChange: function onValueChange(value) {\n        return control.setValue(\"state\", value);\n      },\n      style: {\n        height: 50,\n        width: 200\n      },\n      children: [_jsx(Picker.Item, {\n        label: \"Disponible\",\n        value: \"Disponible\"\n      }), _jsx(Picker.Item, {\n        label: \"No Disponible\",\n        value: \"No Disponible\"\n      })]\n    }), _jsx(Button, {\n      style: {\n        marginTop: 20,\n        backgroundColor: 'red'\n      },\n      icon: \"content-save\",\n      mode: \"outlined\",\n      onPress: handleSubmit(onSubmit),\n      children: \"Guardar\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","useForm","Controller","Form","TextInput","Button","Picker","jsxs","_jsxs","jsx","_jsx","HomeScreen","_ref","_errors$placa","_errors$placa2","_errors$placa3","_errors$placa4","_errors$brand","_errors$brand2","_errors$brand3","_errors$brand4","navigation","route","_useForm","defaultValues","placa","brand","state","control","handleSubmit","errors","formState","onSubmit","data","console","log","style","flex","alignItems","justifyContent","children","params","nombreusuario","rules","required","maxlength","minlength","pattern","render","_ref2","_ref2$field","field","onChange","onBlur","value","label","fontFamily","onChangeText","name","type","color","maxLength","_ref3","_ref3$field","selectedValue","getValues","onValueChange","setValue","height","width","Item","marginTop","backgroundColor","icon","mode","onPress"],"sources":["C:/Users/ThinkPad/Desktop/loguin_ReactNative/componentes/HomeScreen.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { View, Text,} from \"react-native\";\r\nimport { useForm, Controller, Form } from 'react-hook-form';\r\nimport { TextInput, Button } from \"react-native-paper\";\r\nimport { Picker } from '@react-native-picker/picker';\r\n\r\nexport default function HomeScreen({ navigation, route }) {\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm({\r\n        defaultValues: {\r\n            placa: \"\",\r\n            brand: \"\",\r\n            state: \"disponible\",\r\n        },\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <Text>Bienvenido {route.params.nombreusuario}</Text>\r\n            <Controller\r\n                control={control}\r\n                rules={{\r\n                    required: true,\r\n                    maxlength: 20,\r\n                    minlength: 1,\r\n                    pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'°0-9 ]+$/,\r\n                }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        label=\"Numero de Placa\"\r\n                        style={{ fontFamily: 'initial' }}\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                    />\r\n                )}\r\n                name=\"placa\"\r\n            />\r\n            {errors.placa?.type === \"required\" && <Text style={{ color: 'red' }}>Numero de placa es obligatorio.</Text>}\r\n            {errors.placa?.type === \"maxlength\" && <Text style={{ color: 'red' }}>La longitud debe ser de 20.</Text>}\r\n            {errors.placa?.type === \"minlength\" && <Text style={{ color: 'red' }}>La longitud mínima debe ser de 1.</Text>}\r\n            {errors.placa?.type === \"pattern\" && <Text style={{ color: 'red' }}>.</Text>}\r\n\r\n            <Controller\r\n                control={control}\r\n                rules={{\r\n                    required: true,\r\n                    maxLength: 10,\r\n                    minlength: 1,\r\n                    pattern: /^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$/,\r\n                    // Ingresar numeros para eso se usa el pattern\r\n                }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        style={{ fontFamily: 'initial' }}\r\n                        label=\"Marca del Vehiculo\"\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                    />\r\n                )}\r\n                name=\"brand\"\r\n            />\r\n            {errors.brand?.type === \"required\" && <Text style={{ color: 'red' }}>Escribe la marca.</Text>}\r\n            {errors.brand?.type === \"maxLength\" && <Text style={{ color: 'red' }}>La longitud debe ser de 10.</Text>}\r\n            {errors.brand?.type === \"minLength\" && <Text style={{ color: 'red' }}>La longitud mínima debe ser de 1</Text>}\r\n            {errors.brand?.type === \"pattern\" && <Text style={{ color: 'red' }}>.</Text>}\r\n\r\n            <Picker\r\n                selectedValue={control.getValues(\"state\")}\r\n                onValueChange={(value) => control.setValue(\"state\", value)}\r\n                style={{ height: 50, width: 200 }}\r\n            >\r\n                <Picker.Item label=\"Disponible\" value=\"Disponible\" />\r\n                <Picker.Item label=\"No Disponible\" value=\"No Disponible\" />\r\n            </Picker>\r\n\r\n            <Button\r\n                style={{ marginTop: 20, backgroundColor: 'red' }}\r\n                icon=\"content-save\"\r\n                mode=\"outlined\"\r\n                onPress={handleSubmit(onSubmit)}\r\n            >\r\n                Guardar\r\n            </Button>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}